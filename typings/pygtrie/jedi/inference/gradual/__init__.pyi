"""
This type stub file was generated by pyright.
"""

from jedi import debug
from jedi.inference.base_value import NO_VALUES, ValueSet, ValueWrapper
from jedi.inference.gradual.base import BaseTypingValue

class TypeVarClass(ValueWrapper):
    def py__call__(self, arguments): # -> ValueSet:
        ...
    


class TypeVar(BaseTypingValue):
    def __init__(self, parent_context, tree_name, var_name, unpacked_args) -> None:
        ...
    
    def py__name__(self): # -> Any:
        ...
    
    def get_filters(self, *args, **kwargs): # -> Iterator[Any]:
        ...
    
    def is_same_class(self, other): # -> Literal[True]:
        ...
    
    @property
    def constraints(self): # -> ValueSet:
        ...
    
    def define_generics(self, type_var_dict): # -> ValueSet:
        ...
    
    def execute_annotation(self): # -> Self:
        ...
    
    def infer_type_vars(self, value_set): # -> dict[Any, ValueSet]:
        ...
    
    def __repr__(self): # -> str:
        ...
    


class TypeWrapper(ValueWrapper):
    def __init__(self, wrapped_value, original_value) -> None:
        ...
    
    def execute_annotation(self): # -> ValueSet:
        ...
    


