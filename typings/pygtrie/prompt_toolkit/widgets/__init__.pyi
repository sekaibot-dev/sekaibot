"""
This type stub file was generated by pyright.
"""

from typing import Callable, Iterable, Sequence
from prompt_toolkit.application.current import get_app
from prompt_toolkit.filters import Condition
from prompt_toolkit.formatted_text.base import OneStyleAndTextTuple, StyleAndTextTuples
from prompt_toolkit.key_binding.key_bindings import KeyBindings, KeyBindingsBase
from prompt_toolkit.key_binding.key_processor import KeyPressEvent
from prompt_toolkit.keys import Keys
from prompt_toolkit.layout.containers import AnyContainer, ConditionalContainer, Container, Float, FloatContainer, HSplit, Window
from prompt_toolkit.layout.controls import FormattedTextControl
from prompt_toolkit.mouse_events import MouseEvent, MouseEventType
from prompt_toolkit.utils import get_cwidth
from prompt_toolkit.widgets import Shadow
from .base import Border

__all__ = ["MenuContainer", "MenuItem"]
E = KeyPressEvent
class MenuContainer:
    """
    :param floats: List of extra Float objects to display.
    :param menu_items: List of `MenuItem` objects.
    """
    def __init__(self, body: AnyContainer, menu_items: list[MenuItem], floats: list[Float] | None = ..., key_bindings: KeyBindingsBase | None = ...) -> None:
        ...
    
    @property
    def floats(self) -> list[Float] | None:
        ...
    
    def __pt_container__(self) -> Container:
        ...
    


class MenuItem:
    def __init__(self, text: str = ..., handler: Callable[[], None] | None = ..., children: list[MenuItem] | None = ..., shortcut: Sequence[Keys | str] | None = ..., disabled: bool = ...) -> None:
        ...
    
    @property
    def width(self) -> int:
        ...
    


