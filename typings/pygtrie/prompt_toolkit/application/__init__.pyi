"""
This type stub file was generated by pyright.
"""

from typing import Callable
from prompt_toolkit.eventloop import InputHook
from prompt_toolkit.formatted_text import AnyFormattedText
from prompt_toolkit.input import DummyInput
from prompt_toolkit.output import DummyOutput
from .application import Application

__all__ = ["DummyApplication"]
class DummyApplication(Application[None]):
    """
    When no :class:`.Application` is running,
    :func:`.get_app` will run an instance of this :class:`.DummyApplication` instead.
    """
    def __init__(self) -> None:
        ...
    
    def run(self, pre_run: Callable[[], None] | None = ..., set_exception_handler: bool = ..., handle_sigint: bool = ..., in_thread: bool = ..., inputhook: InputHook | None = ...) -> None:
        ...
    
    async def run_async(self, pre_run: Callable[[], None] | None = ..., set_exception_handler: bool = ..., handle_sigint: bool = ..., slow_callback_duration: float = ...) -> None:
        ...
    
    async def run_system_command(self, command: str, wait_for_enter: bool = ..., display_before_text: AnyFormattedText = ..., wait_text: str = ...) -> None:
        ...
    
    def suspend_to_background(self, suspend_group: bool = ...) -> None:
        ...
    


