"""
This type stub file was generated by pyright.
"""

from pydantic import BaseModel, DirectoryPath

"""SekaiBot 配置。

SekaiBot 使用 [pydantic](https://pydantic-docs.helpmanual.io/) 来读取配置。
"""
__all__ = ["BotConfig", "ConfigModel", "LogConfig", "MainConfig", "NodeConfig"]
class ConfigModel(BaseModel):
    """KafuBot 配置模型。

    Attributes:
        __config_name__: 配置名称。
    """
    model_config = ...
    __config_name__: str = ...


class LogConfig(ConfigModel):
    """SekaiBot 日志相关设置。

    Attributes:
        level: 日志级别。
        verbose_exception: 详细的异常记录，设置为 `True` 时会在日志中添加异常的 Traceback。
    """
    level: str | int = ...
    verbose_exception: bool = ...


class BotConfig(ConfigModel):
    """Bot 相关设置。"""
    event_queue_size: int = ...
    nodes: set[str] = ...
    node_dirs: set[DirectoryPath] = ...
    adapters: set[str] = ...
    adapter_max_retries: int = ...
    superusers: set[str] = ...
    log: LogConfig = ...


class AdapterConfig(ConfigModel):
    """适配器配置。"""
    ...


class NodeConfig(ConfigModel):
    """节点配置。"""
    ...


class PluginConfig(ConfigModel):
    """节点配置。"""
    ...


class RuleConfig(ConfigModel):
    """规则配置。

    Attributes:
        command_start: 命令的起始标记，用于判断一条消息是不是命令。
        command_sep: 命令的分隔标记，用于将文本形式的命令切分为元组 (实际的命令名) 。
    """
    command_start: set[str] = ...
    command_sep: set[str] = ...


class PermissionConfig(ConfigModel):
    """权限配置。

    Attributes:
        superusers: 超级管理员列表。
    """
    superusers: set[str] = ...


class MainConfig(ConfigModel):
    """SekaiBot 主体配置。"""
    bot: BotConfig = ...
    node: NodeConfig = ...
    adapter: AdapterConfig = ...
    plugin: PluginConfig = ...
    rule: RuleConfig = ...
    permission: PermissionConfig = ...


