[project]
name = "sekaibot"
version = "0.1.0"
description = "A cross-platform, asynchronous, and progressive Python bot development framework"
authors = [
    {name = "Kotodama",email = "2682064633@qq.com"}
]
license = {text = "MIT"}
readme = "README.md"
keywords = ["bot", "chatbot", "qq", "qqbot", "cqhttp", "coolq"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: AsyncIO",
    "Framework :: Robot Framework",
    "Framework :: Robot Framework :: Library",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Topic :: Communications :: Chat",
]
requires-python = ">=3.11,<4"
dependencies = [
    "aiohttp==3.11.13",
    "anyio==4.8.0",
    "exceptiongroup==1.2.2",
    "pyahocorasick==2.1.0",
    "pydantic==2.11.3",
    "pygtrie==2.5.0",
    "pypinyin==0.54.0",
    "PyYAML==6.0.2",
    "structlog==25.2.0",
    "typing_extensions==4.13.2",
]

[project.urls]
Repository = "https://github.com/sekaibot-dev/sekaibot"

[project.optional-dependencies]
cqhttp = ["sekaibot-adapter-cqhttp"]
onebot = ["sekaibot-adapter-onebot"]
apscheduler = ["sekaibot-plugin-apscheduler"]
word_fliter = ["pyahocorasick>=2.1.0","pypinyin>=0.54.0"]
hot_reload = ["watchfiles>=0.24"]
all = [
    "sekaibot-adapter-cqhttp",
    "sekaibot-adapter-onebot",
    "sekaibot-plugin-apscheduler",
    "watchfiles>=0.24",
    "pyahocorasick>=2.1.0",
    "pypinyin>=0.54.0",
]

[tool.uv]
dev-dependencies = [
    # dev
    "setuptools>=74",
    "trio>=0.26",
    "exceptiongroup>=1",
    "tomli>=2",
    # lint
    "ruff>=0.6",
    "mypy>=1",
    "pylint>=3",
    "pylint-pydantic>=0.3",
    # docs
    "sophia-doc>=0.1",
    "tomlkit>=0.13",
    # test
    "pytest>=8",
    "pytest-mock>=3",
    "pytest-xdist>=3",
    "pytest-cov>=5",
]

[tool.uv.sources]
sekaibot-adapter-cqhttp = { workspace = true }
sekaibot-adapter-onebot = { workspace = true }
sekaibot-plugin-apscheduler = { workspace = true }

[tool.uv.workspace]
members = ["packages/*"]

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = ["ALL"]
exclude = ["typeshed-fallback", "*/typeshed/*"]
ignore = [
    "C90",      # mccabe
    "FBT",      # flake8-boolean-trap
    "EM",       # flake8-errmsg
    "INP",      # flake8-no-pep420
    "E501",     # Line too long, handled by formatter
    "D415",     # First line should end with a period, question mark, or exclamation point
    "ANN401",   # Dynamically typed expressions (typing.Any) are disallowed
    "ASYNC109", # Async function definition with a timeout parameter
    "S101",     # Use of assert detected
    "COM812",   # Trailing comma missing
    "TD003",    # Missing issue link on the line following this TODO
    "FIX002",   # Line contains TODO
    "PGH003",   # Use specific rule codes when ignoring type issues
    "PLR0912",  # Too many branches
    "PLR0913",  # Too many arguments to function call
    "TRY003",   # Avoid specifying long messages outside the exception class
    "PERF203",  # try-except within a loop incurs performance overhead
    "D107",
    "BLE001",
    "PLW2901",
    "TRY301",
    "N802",
    "SLF001",
]
allowed-confusables = ["，", "：", "！", "（", "）"]

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["id", "type"]

[tool.ruff.lint.isort]
known-third-party = ["pydantic", "aiohttp", "structlog"]
extra-standard-library = ["typing_extensions"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pyflakes]
extend-generics = [
    "sekaibot.plugin.Plugin",
    "sekaibot.internal.adapter.Adapter",
    "sekaibot.internal.event.Event",
    "sekaibot.internal.message.Message",
    "sekaibot.internal.message.MessageSegment",
]

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.ruff.lint.per-file-ignores]
"packages/*/sekaibot/__init__.py" = ["D104"]
"packages/*/sekaibot/adapter/__init__.py" = ["D104"]
"example/nodes/*.py" = ["D", "T", "ANN"]
"test/*.py" = ["D", "PLR2004"]

[tool.pyright]
ignore = ["example/nodes"]
exclude = ["**/.conda", "**/.venv", "**/__pycache__"]
pythonVersion = "3.11"
pythonPlatform = "All"
typeCheckingMode = "strict"
python.linting.enabled = false
python.linting.mypyEnabled = false
python.linting.pylintEnabled = false
reportUnnecessaryIsInstance = false
reportCallInDefaultInitializer = true
reportImplicitOverride = true
reportPropertyTypeMismatch = true
reportInvalidTypeVarUse = false
reportShadowedImports = true
reportUninitializedInstanceVariable = false
reportPrivateUsage = false
reportIncompatibleOverride = false
extraPaths = [
    "test", 
    "test/test_utils",
    "packages/sekaibot-adapter-cqhttp",
    "packages/sekaibot-adapter-onebot",
    "packages/sekaibot-plugin-apscheduler",
]

[tool.mypy]
python_version = "3.11"
strict = true
exclude = [
    '^packages/.*/sekaibot/__init__\.py$',
    '^packages/.*/sekaibot/adapter/__init__\.py$',
    '^example/.*\.py$',
]
disable_error_code = [
    "valid-type", 
    "unused-ignore",
    "index",
    "misc",
]
warn_return_any = false

[[tool.mypy.overrides]]
module = "apscheduler.*"
ignore_missing_imports = true

[tool.pylint.main]
disable = [
    # Warning
    "broad-exception-caught",
    "arguments-differ",
    "pointless-string-statement",
    "signature-differs",
    "unsupported-assignment-operation",
    "no-member",
    "unsubscriptable-object",
    "protected-access",
    "redefined-outer-name",
    # Convention
    "import-outside-toplevel",
    "invalid-name",
    "line-too-long",
    "missing-function-docstring",
    "too-many-lines",
    # Refactor
    "duplicate-code",
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-boolean-expressions",
    "too-many-branches",
    "too-many-instance-attributes",
    "too-many-nested-blocks",
    "too-many-positional-arguments",
    "too-many-public-methods",
]
py-version = "3.11"
load-plugins = ["pylint_pydantic"]
source-roots = ["."]
ignore = ["**/test"]

[tool.pylint.variables]
allowed-redefined-builtins = ["id", "type"]

[tool.pytest.ini_options]
log_cli = true
testpaths = "test"
addopts = "--cov=sekaibot --cov-report=term-missing"

[tool.coverage.run]
omit = ["sekaibot/adapter/utils.py"]

[tool.hatch.build]
packages = ["sekaibot", "sekaibot/py.typed"]

[tool.hatch.build.targets.sdist]
include = ["/README.md", "/sekaibot", "sekaibot/py.typed"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
